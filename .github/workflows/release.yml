name: Release

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
        
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        
      # Read commit message
      - name: Get commit message
        id: get-commit-message
        run: |
          echo "::set-output name=message::$(git log --no-merges -1 --oneline)"
        
      # Get version
      - name: Get version
        if: "contains(steps.log.outputs.message, 'release ')"
        id: get-version
        run: |
          VERSION=$(grep '"version"' package.json | cut -d '"' -f 4)
          echo "::set-output name=version::$VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Node
      #- name: Setup Node
      #  uses: actions/setup-node@v1
      #  with:
      #    node-version: '12.x'

      # Copy project dir
      - name: Copy project/ to export/
        if: "contains(steps.log.outputs.message, 'release ')"
        run: |
          cp -r project/ export/
      
      # Remove unused files
      - name: Cleanup export/
        if: "contains(steps.log.outputs.message, 'release ')"
        run: |
          rm export/ignore.md
          rm export/ignore.txt

      # Zip
      - name: Zip
        if: "contains(steps.log.outputs.message, 'release ')"
        run: |
          zip --junk-paths -r export export

      - name: Create a Release
        if: "contains(steps.log.outputs.message, 'release ')"
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get-version.outputs.version }}
          release_name: Release v${{ steps.get-version.outputs.version }}
          body: https://han.netlify.app/changelog/index.htm#/${{ steps.get-version.outputs.version }}/
          draft: false
          prerelease: false

      # Upload  
      - name: Upload a Release Asset
        if: "contains(steps.log.outputs.message, 'release ')"
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./export.zip
          asset_name: export-v${{ steps.get-version.outputs.version }}.zip
          asset_content_type: application/zip
      
      # Get release download url
      - name: Download url
        if: "contains(steps.log.outputs.message, 'release ')"
        run: |
          echo ${{ steps.upload-release-asset.outputs.browser_download_url }}
        
    
