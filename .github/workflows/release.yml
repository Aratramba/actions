# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        
      # Check version updated
      - name: Package Version Updated
        uses: MontyD/package-json-updated-action@1.0.1
        id: version-updated
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Node
      - name: Setup Node
        #if: steps.version-updated.outputs.has-updated
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      # Copy project dir
      - name: Copy Directory
        #if: steps.version-updated.outputs.has-updated
        uses: MadaraUchiha/copy-action@0.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Source file
          source: '-r ./project'
          # Target file
          target: 'public'
          
      # Zip
      - name: Zip
        run: |
          zip --junk-paths export 'public/' -x '*.ignore.md*'

      - name: Create a Release
        #if: steps.version-updated.outputs.has-updated
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version-updated.outputs.current-package-version }}
          release_name: Release v${{ steps.version-updated.outputs.current-package-version }}
          body: releasebot
          draft: false
          prerelease: false

      # Upload  
      - name: Upload a Release Asset
        #if: steps.version-updated.outputs.has-updated
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./export.zip
          asset_name: export-v${{ steps.version-updated.outputs.current-package-version }}.zip
          asset_content_type: application/zip
        
    
